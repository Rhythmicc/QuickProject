#compdef qs

local cur prev lang
cur=${words[CURRENT]}
prev=${words[CURRENT-1]}
lang=$(qs user_lang)

(( $+functions[_qs_args_comp_en] )) || 
_qs_args_comp_en() {
    local -a opt_args
    if [[ ${prev} == dl ]]; then
        opt_args=(
            {-v,--video}:'use youtube-dl download video'
            {-px,--proxy}:'use default proxy set in ~/.qsrc'
            --name:'set file name'
            -h:'get help'
        )
        
    elif [[ ${prev} == alioss ]] || [[ ${prev} == txcos ]] || [[ ${prev} == qiniu ]]; then
        opt_args=(
            -help:'get help'
            -up:'upload <file> to [bucket]'
            -dl:'download <file> from [bucket]'
            -rm:'remove <file> from [bucket]'
            -ls:'list [bucket]'
        )
    elif [[ ${prev} == avg ]] || [[ ${prev} == photo ]] || [[ ${prev} == bing ]] || [[ ${prev} == wallhaven ]]; then
        opt_args=(
            -save:'save image'
        )
    elif [[ ${prev} == loli ]] || [[ ${prev} == setu ]]; then
        opt_args=(
            -save:'save image'
            -p:'use default proxy to download'
        )
    else
        _arguments -S -s '*:filename:_files'
        return
    fi
    _describe subcommand opt_args
}

(( $+functions[_qs_args_comp_zh] )) || 
_qs_args_comp_zh() {
    local -a opt_args
    if [[ ${prev} == dl ]]; then
        opt_args=(
            {-v,--video}:'使用youtube-dl下载视频'
            {-px,--proxy}:'使用配置表中的默认代理下载'
            --name:'设置文件名'
            -h:'获取帮助'
        )
        
    elif [[ ${prev} == alioss ]] || [[ ${prev} == txcos ]] || [[ ${prev} == qiniu ]]; then
        opt_args=(
            -help:'获取帮助'
            -up:'上传<文件>至[桶]'
            -dl:'下载<文件>从[桶]'
            -rm:'删除<文件>从[桶]'
            -ls:'获取[桶]信息'
        )
    elif [[ ${prev} == avg ]] || [[ ${prev} == photo ]] || [[ ${prev} == bing ]] || [[ ${prev} == wallhaven ]]; then
        opt_args=(
            -save:'保存图片'
        )
    elif [[ ${prev} == loli ]] || [[ ${prev} == setu ]]; then
        opt_args=(
            -save:'保存图片'
            -p:'通过默认代理下载'
        )
    else
        _arguments -S -s '*:filename:_files'
        return
    fi
    _describe subcommand opt_args
}

(( $+functions[_qs_main_en] )) || 
_qs_main_en() {
    local -a args
    args=(
        basic:'Basic tools help'
        system:'System tools help'
        net:'Network tools help'
        api:'API tools help'
        image:'Image tools help'
        u:'open url in default browser'
        a:'open app on Mac'
        f:'open file or dir'
        cal:'calculate expression'
        time:'check current time'
        pcat:'print content in clipboard*'
        fcopy:'copy file content to clipboard'
        http:'start multi-threads http server'
        netinfo:'get IP information'
        dl:'download file from http url*'
        wifi:'connect wifi'
        upload:'upload your pypi lib'
        upgrade:'upgrade qs'
        top:'CPU & MEM monitor'
        clear:'clear MEM'
        go2git:'go to the webpage of the git config'
        mktar:'create gzipped archive for <files>'
        untar:'extract *.tar.*'
        mkzip:'make a zip for <files>'
        unzip:'extract *.zip <file>'
        unrar:'extract *.rar <file>'
        mk7z:'make a 7z archive for <files>'
        un7z:'extract *.7z file'
        md5:'calculate md5 of <files>'
        sha1:'calculate SHA1 of <files>'
        sha256:'calculate SHA256 of <files>'
        sha512:'calculate SHA512 of <files>'
        diff:'diff two directories'
        trans:'translate the content*'
        pinyin:'get the pinyin of Chinese content*'
        rmbg:'remove image background'
        smms:'upload <img> or img in <markdown> to sm.ms'
        upimg:'upload <img> or img in <markdown> to platform'
        alioss:'operate aliyun oss'
        txcos:'operate txcos cos'
        qiniu:'operate qiniu oss'
        weather:'get weather [location]'
        LG:'make image larger(with Baidu AI)'
        nlp:'Text error correction*'
        cb:'Get Or Post msg by using network disk'
        pasteme:'get with key, [password] or post clipboard content'
        bcv:'get Bilibili video cover image with <url>'
        gbc:'check Chinese garbage classification'
        svi:'get short video info (show url)'
        svd:'download short video info as mp4'
        acg:'get an acg image link (or save)'
        photo:'get an porn photo link (or save)'
        bing:'get an bing image link (or save)'
        phi:'get <image url> in url (preview on Mac)'
        kd:'Query China express'
        loli:'get and loli image link [or save (use default proxy)]'
        setu:'randomly call acg, acg2, loli'
        exc:'Query <number> <fr> corresponding <number?> <to>'
        zhihu:'Get zhihu.com Daily'
        wallhaven:'Get Wallhaven Toplist'
        lmgtfy:'Get LMGTFY link for keywords'
        d60:'Get the daily 60-second morning report'
        stbg:'color replace for picture'
        icat:'preview image on terminal'
        v2gif:'generate gif from video'
        v2mp4:'format video to mp4'
        v2mp3:'extract audio from video and save in MP3'
        rmaudio:'remove audio in video (return mp4 only)'
        i2png:'transform imgs to png'
        i2jpg:'transform imgs to jpg'
        fmti:'format image to <to> color except [exp...] color'
        vsta:"set video's audio"
    )

    _describe -t common-commands 'common commands' args && _ret=0
}

(( $+functions[_qs_main_zh] )) || 
_qs_main_zh() {
    local -a args
    args=(
        basic:'基础工具帮助'
        system:'系统工具帮助'
        net:'网络工具帮助'
        api:'扩展工具帮助'
        image:'图像工具帮助'
        u:'使用默认浏览器打开多个链接'
        a:'在Mac上打开APP'
        f:'打开文件或目录'
        cal:'计算表达式'
        time:'查看当前时间'
        pcat:'输出粘贴板内容*'
        fcopy:'拷贝文件内容至粘贴板'
        http:'启动多线程http服务'
        netinfo:'获取IP信息'
        dl:'通过http链接下载文件*'
        wifi:'连接WiFi'
        upload:'上传你的pypi仓库'
        upgrade:'更新qs'
        top:'CPU和内存监控器'
        clear:'清理本机内存'
        go2git:'前往git目录的托管仓库网页'
        mktar:'创建tar压缩包'
        untar:'解压tar压缩包'
        mkzip:'创建zip压缩包'
        unzip:'解压zip压缩包'
        unrar:'解压rar压缩包'
        mk7z:'创建7z压缩包'
        un7z:'解压7z压缩包'
        md5:'计算文件md5值'
        sha1:'计算文件sha1值'
        sha256:'计算文件sha256值'
        sha512:'计算文件sha512值'
        diff:'对比两个文件夹差异'
        trans:'翻译*'
        pinyin:'获取文本拼音*'
        rmbg:'删除图片背景'
        smms:'将图片或markdown中图片上传sm.ms'
        upimg:'将图片或markdown中图片上传至多平台'
        alioss:'操作阿里云对象存储'
        txcos:'操作腾讯云对象存储'
        qiniu:'操作七牛云对象存储'
        weather:'获取天气'
        LG:'通过百度AI无损放大图片'
        nlp:'通过百度NLP进行文本纠错'
        cb:'通过网络硬盘的本地文件系统get或post信息'
        pasteme:'通过pasteme get或post信息'
        bcv:'获取B站视频、直播封面图片'
        gbc:'查询垃圾分类'
        svi:'获取多平台短视频信息 (展示链接)'
        svd:'下载多平台短视频为mp4'
        acg:'获取一张acg图片链接 (或保存)'
        photo:'获取一张涩图链接 (或保存)'
        bing:'获取一张bing图片链接 (或保存)'
        phi:'获取url里的图片链接 (Mac上iTerm可预览)'
        kd:'查询国内快递'
        loli:'获取一张萝莉图片链接 [或(使用默认代理)下载]'
        setu:'随机调用acg, acg2, loli'
        exc:'汇率查询<number> <fr> 对应 多少 <to>'
        zhihu:'获取知乎日报'
        wallhaven:'获取Wallhaven Top动漫涩图'
        lmgtfy:'获取关键词的LMGTFY链接'
        d60:'获取每日60秒早报'
        stbg:'替换图片颜色 (from默认为透明)'
        icat:'在终端预览图片'
        v2gif:'将视频导出为gif'
        v2mp4:'将视频导出为mp4'
        v2mp3:'提取视频音频为mp3'
        rmaudio:'删除mp4文件音频'
        i2png:'将图像转换为png'
        i2jpg:'将图像转换为jpg'
        fmti:'格式化图片颜色为<to>，忽略[exp...]颜色'
        vsta:'设置视频的音频'
    )

    _describe -t common-commands 'common commands' args && _ret=0
}

if (( ${#words} == 3 )); then
    if [[ ${lang} == 'zh' ]]; then
        _qs_args_comp_zh
    else
        _qs_args_comp_en
    fi
elif [[ ${lang} == 'zh' ]]; then
    _qs_main_zh
else
    _qs_main_en
fi

